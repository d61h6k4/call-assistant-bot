diff --git a/mediapipe/framework/tool/mediapipe_proto.bzl b/mediapipe/framework/tool/mediapipe_proto.bzl
index 787aa593..12cb7c9b 100644
--- a/mediapipe/framework/tool/mediapipe_proto.bzl
+++ b/mediapipe/framework/tool/mediapipe_proto.bzl
@@ -4,9 +4,9 @@
 # buildifier: disable=out-of-order-load
 load("//mediapipe/framework/tool:mediapipe_graph.bzl", "mediapipe_options_library")
 load("//mediapipe/framework/tool:mediapipe_proto_allowlist.bzl", "rewrite_target_list")
-load("@com_google_protobuf//:protobuf.bzl", "cc_proto_library", "py_proto_library")
+load("@com_google_protobuf//bazel:py_proto_library.bzl", "py_proto_library")
+load("@com_google_protobuf//bazel:cc_proto_library.bzl", "cc_proto_library")
 load("@rules_proto//proto:defs.bzl", "proto_library")
-load("@rules_proto_grpc//js:defs.bzl", "js_proto_library")
 
 def provided_args(**kwargs):
     """Returns the keyword arguments omitting None arguments."""
@@ -140,17 +140,6 @@ def mediapipe_proto_library_impl(
             compatible_with = compatible_with,
         ))
 
-    if def_jspb_proto:
-        mediapipe_js_proto_library(**provided_args(
-            name = replace_suffix(name, "_proto", "_jspb_proto"),
-            srcs = srcs,
-            deps = proto_deps,
-            lib_proto_deps = deps,
-            visibility = visibility,
-            testonly = testonly,
-            compatible_with = compatible_with,
-        ))
-
     if def_options_lib:
         cc_deps = replace_deps(deps, "_proto", "_cc_proto")
         mediapipe_options_library(**provided_args(
@@ -369,14 +358,11 @@ def mediapipe_py_proto_library_oss(
       proto_deps: a list of dependency labels for bazel use.
       testonly: test only proto or not.
     """
-    _ignore = [api_version, proto_deps]
+    _ignore = [api_version]
     py_proto_library(**provided_args(
         name = name,
-        srcs = srcs,
         visibility = visibility,
-        default_runtime = "@com_google_protobuf//:protobuf_python",
-        protoc = "@com_google_protobuf//:protoc",
-        deps = py_proto_deps + ["@com_google_protobuf//:protobuf_python"],
+        deps = proto_deps,
         testonly = testonly,
     ))
 
@@ -396,64 +382,17 @@ def mediapipe_cc_proto_library_oss(
         deps: a list of dependency labels for Bazel use; must be cc_proto_library.
         testonly: test only proto or not.
     """
-    _ignore = [deps]
+    _ignore = []
 
     cc_proto_library(**provided_args(
         name = name,
-        srcs = srcs,
         visibility = visibility,
-        deps = cc_deps,
+        deps = deps,
         testonly = testonly,
-        cc_libs = ["@com_google_protobuf//:protobuf"],
-        protoc = "@com_google_protobuf//:protoc",
-        default_runtime = "@com_google_protobuf//:protobuf",
-        alwayslink = 1,
     ))
 
-def mediapipe_js_proto_library_oss(
-        name,
-        srcs,
-        deps,
-        lib_proto_deps,
-        visibility = None,
-        testonly = 0,
-        compatible_with = None):
-    """Generate js_proto_library for mediapipe open source version.
-
-    Args:
-      name: the name of the js_proto_library.
-      srcs: the .proto files of the js_proto_library for Bazel use.
-      deps: a list of dependency labels for bazel use ; must be proto_library.
-      lib_proto_deps: a list of "_proto" dependency labels.
-      visibility: Visibility of this target.
-      testonly: test only proto or not.
-      compatible_with: a list of environments the rule is compatible with.
-    """
-    _ignore = [deps, testonly, compatible_with]
-
-    js_deps = replace_deps(lib_proto_deps, "_proto", "_jspb_proto", False)
-    proto_library(
-        name = replace_suffix(name, "_jspb_proto", "_lib_proto"),
-        srcs = srcs,
-        deps = lib_proto_deps,
-        visibility = visibility,
-    )
-    js_proto_library(
-        name = name,
-        protos = [replace_suffix(name, "_jspb_proto", "_lib_proto")],
-        output_mode = "NO_PREFIX_FLAT",
-        # Need to specify this to work around bug in js_proto_library()
-        # https://github.com/bazelbuild/rules_nodejs/issues/3503
-        legacy_path = "unused",
-        deps = js_deps,
-        visibility = visibility,
-    )
-
 def mediapipe_py_proto_library(**kwargs):
     mediapipe_py_proto_library_oss(**kwargs)
 
 def mediapipe_cc_proto_library(**kwargs):
     mediapipe_cc_proto_library_oss(**kwargs)
-
-def mediapipe_js_proto_library(**kwargs):
-    mediapipe_js_proto_library_oss(**kwargs)
