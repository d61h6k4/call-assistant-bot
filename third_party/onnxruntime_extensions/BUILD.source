load("@rules_foreign_cc//foreign_cc:defs.bzl", "cmake")


config_setting(
    name = "osx_arm64",
    constraint_values = [
        "@platforms//os:macos",
        "@platforms//cpu:arm64",
    ],
)

config_setting(
    name = "linux_aarch64",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:aarch64",
    ],
)

filegroup(
    name = "srcs",
    srcs = glob([
        "**",
    ]),
)

cmake(
    name = "foreign_libortextensions",
    build_args = [
        "-j `nproc`",
    ],
    generate_args = [
        "-GNinja",
    ],
    # Values to be passed as -Dkey=value on the CMake command line;
    # here are serving to provide some CMake script configuration options
    cache_entries = {
        "CMAKE_BUILD_TYPE": "Release",
        "OCOS_ENABLE_CTEST": "OFF",
        "OCOS_ENABLE_TF_STRING": "ON",
        "OCOS_ENABLE_RE2_REGEX": "OFF",
        "OCOS_ENABLE_GPT2_TOKENIZER": "ON",
        "OCOS_ENABLE_TRIE_TOKENIZER": "OFF",
        "OCOS_ENABLE_SPM_TOKENIZER": "OFF",
        "OCOS_ENABLE_WORDPIECE_TOKENIZER": "OFF",
        "OCOS_ENABLE_BERT_TOKENIZER": "ON",
        "OCOS_ENABLE_BLINGFIRE": "OFF",
        "OCOS_ENABLE_MATH": "ON",
        "OCOS_ENABLE_DLIB": "OFF",
        "OCOS_ENABLE_OPENCV_CODECS": "ON",
        "OCOS_ENABLE_CV2": "ON",
        "OCOS_ENABLE_VISION": "OFF",
        "OCOS_ENABLE_AUDIO": "OFF",
        "OCOS_ENABLE_AZURE": "OFF",
        "OCOS_ENABLE_C_API": "ON",
        "OCOS_ENABLE_STATIC_LIB": "ON",
        "OCOS_ONNXRUNTIME_VERSION": "1.18.0",
        "ONNXRUNTIME_PKG_DIR": "$EXT_BUILD_DEPS",
        "GSL_INCLUDE_DIR": "$EXT_BUILD_DEPS",
        "nlohmann_json_SOURCE_DIR": "$EXT_BUILD_DEPS",
        "opencv_INCLUDE_DIRS": "$EXT_BUILD_DEPS",
        "opencv_LIBS": "$EXT_BUILD_DEPS/lib/libopencv_core.a;$EXT_BUILD_DEPS/lib/libopencv_imgcodecs.a;$EXT_BUILD_DEPS/lib/libopencv_imgproc.a;$EXT_BUILD_DEPS/lib/libzlib.a;$EXT_BUILD_DEPS/lib/libpng.a;$EXT_BUILD_DEPS/lib/libjpeg.a;$EXT_BUILD_DEPS/lib/libjpeg12.a;$EXT_BUILD_DEPS/lib/libjpeg16.a",
    },
    lib_source = ":srcs",
    visibility = ["//visibility:public"],
    out_shared_libs = [
        "libortextensions.0.11.0.dylib",
        "libortextensions.0.dylib",
        "libortextensions.dylib",
    ],
    deps = [
        "@gsl",
        "@nlohmann_json//:json",
        "@opencv",
    ] + select({
        ":osx_arm64": ["@onnxruntime_osx_arm64//:libonnxruntime"],
        ":linux_aarch64": ["@onnxruntime_linux_aarch64//:libonnxruntime"],
        "//conditions:default": ["@onnxruntime_linux_x64//:libonnxruntime"],
    }),
    targets = [
        "extensions_shared",
    ],
)

cc_library(
    name = "libonnxruntime_extensions",
    hdrs = glob([
        "include/*.h",
        "include/custom_op/*.h",
        "shared/api/*.h*",
    ]),
    srcs = glob([
        "shared/api/*.cc",
    ]),
    deps = [
        ":foreign_libortextensions"
    ],
    visibility = ["//visibility:public"],
)
