name: Deploying
on:
  workflow_dispatch:
  push:
    branches:
      - main
env:
  GAR_LOCATION: ${{ vars.GAR_LOCATION }}
  APP: meeting-bot
  PROJECT_ID: ${{ vars.PROJECT_ID }}
jobs:
  deploy:
    name: "Deploying"
    runs-on: ubuntu-22.04
    # Add "id-token" with the intended permissions.
    permissions:
      contents: "read"
      id-token: "write"

    needs:
      - test

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          lfs: "false"

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: "Google auth"
        id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "${{ secrets.WIF_PROVIDER }}"
          service_account: "${{ secrets.WIF_SERVICE_ACCOUNT }}"
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          project_id: "${{ env.PROJECT_ID }}"
      - name: "Docker auth"
        run: |-
          gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

      - name: Mount bazel cache # Optional
        uses: actions/cache@v4
        with:
          path: "~/.cache/bazel"
          key: bazel-${{ hashFiles('.bazelrc', '.bazelversion', 'MODULE.bazel', 'MODULE.bazel.lock') }}
          restore-keys: |
            bazel-

      - name: "Pre-install dependencies"
        run: |
          sudo apt install -y yasm automake libtool m4
          touch ml/detection/models/model.onnx
          bazel run //tools:sync -- --action download models --all

      - name: "Build and push container"
        run: |
          bazel run //docker:push -- -r ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }} -t ${{ github.sha }}
